<?xml version="1.0"?>
<launch>
  <arg name="start_kuka" default="True" />
  <arg name="robot_name" default="kuka" />
  <arg name="use_ros_control" default="True" /> <!-- in case of true use the ros controller plugin with update rate etc. set it to false if you wanna use it with moveIt! -->
  <arg name="motors_controller_type" default="EffortJointInterface" /> <!-- PositionJointInterface EffortJointInterface, velocity, position set it just for link 4 and 5-->

  <arg name="start_rviz" default="False" />
  <arg name="move_arm" default="True" /> <!-- moves arm once after ... seconds -->
  <arg name="move_arm_to" default="zero" /> <!-- zero or freaky state top -->

   <!-- Camera:-->
   <arg name="use_camera" default="True" />
   <arg name="camera_name" default="my_camera" />
   <arg name="use_realsense" default="True" />
   <arg name="use_asus_xtion" default="False" />
   <arg name="camera_pos_z" default="1" />
   <arg name="camera_pos_x" default="-1.5" /> <!-- actually this - makes no sense no idea why it must be here... -->
   <arg name="use_rgb" default="True" />
   <arg name="use_depth" default="True" />
   <arg name="camera_fps" default="30" /> <!-- both fps rgb and depth  -->
   <arg name="camera_width" default="640" />
   <arg name="camera_height" default="480" />

    <!-- Ball: -->
    <arg name="use_ball" default="True" />
    <arg name="ball_name" default="ball" />
    <arg name="ball_x_pos" default="1.4" /> <!-- 1.4 (for zero state) -->
    <arg name="ball_y_pos" default="0.0" /> <!-- world y= x(frame) (for zero state!) -->
    <arg name="ball_z_pos" default="0.66" />   <!-- 0.67 (for zero state), 1.76 (top) -->

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

<group if="$(arg start_kuka)">
  <include file="$(find kr5_description)/launch/kr5_upload.launch">
     <arg name="robot_name" value="$(arg robot_name)" />
     <arg name="use_ros_control" value="$(arg use_ros_control)" />
     <arg name="motors_controller_type" value="$(arg motors_controller_type)" />
  </include>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot
       Note: set x, y, z to 0 otherwise rviz and gazebo position do not match!!! -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model $(arg robot_name) -param robot_description -x 0.0 -y 0.0 -z 0.0"/>

  <include file="$(find kuka_kr5_control)/launch/manipulator_control.launch">
     <arg name="robot_name" value="$(arg robot_name)" />
     <arg name="motors_controller_type" value="$(arg motors_controller_type)" />
  </include>

  <!-- start the controller_node to control the plate's position for example -->
  <include file="$(find kuka_kr5_control)/launch/start_control_node.launch">
     <arg name="motors_controller_type" value="$(arg motors_controller_type)" />
  </include>
</group>


    <!-- just load the camera -->
    <group ns="$(arg camera_name)" if="$(arg use_camera)">
         <include file="$(find camera_description)/launch/load_camera.launch">
             <arg name="camera_name" value="$(arg camera_name)" />
             <arg name="use_realsense" default="$(arg use_realsense)" />
             <arg name="use_asus_xtion" default="$(arg use_asus_xtion)" />
             <arg name="camera_pos_z" default="$(arg camera_pos_z)" />
             <arg name="camera_pos_x" value="$(arg camera_pos_x)" />
             <arg name="use_rgb" default="$(arg use_rgb)" />
             <arg name="use_depth" default="$(arg use_depth)" />
             <arg name="camera_fps" default="$(arg camera_fps)" />
            <arg name="camera_width" default="$(arg camera_width)" />
            <arg name="camera_height" default="$(arg camera_height)" />
          </include>

         <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg camera_name) -param robot_description
        -x 0.0 -y 0.2 -z 0.0
         -R 0.0 -P 0.0 -Y 0.0" />

     <node name="robot_state_publisher_camera" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
         <remap from="/joint_states" to="/$(arg camera_name)/joint_states" />
     </node>

           <!-- for static models:
         rosrun tf static_transform_publisher x y z yaw  pitch roll frame_id child_frame_id  period(milliseconds) -->
         <node pkg="tf" type="static_transform_publisher" name="camera_mount_link_to_world" args="0 0 0 0 0 0  /world /camera_footprint 200" />
    </group>

    <!--    move robot arm after 20 secs: -->
    <group if="$(arg move_arm)">
      <node pkg="kuka_kr5_gazebo" type="timed_roslaunch.sh"
        args="8 kuka_kr5_gazebo move_robot_arm.launch
          move_arm_to:=$(arg move_arm_to)"
        name="move_arm_after20sec" output="screen">
      </node>
    </group>

<!--    load ball after 25 secs -->
    <group if="$(arg use_ball)">
      <node pkg="kuka_kr5_gazebo" type="timed_roslaunch.sh"
        args="18 kuka_kr5_gazebo load_ball.launch
        ball_name:=$(arg ball_name)
        ball_x_pos:=$(arg ball_x_pos)
        ball_y_pos:=$(arg ball_y_pos)
        ball_z_pos:=$(arg ball_z_pos)"
        name="load_ball_after25" output="screen">
      </node>
    </group>

    <!--   switch control mode -->
    <group if="$(arg move_arm)">
      <node pkg="kuka_kr5_gazebo" type="timed_roslaunch.sh"
        args="20 kuka_kr5_gazebo switch_to_continuous_effort_control_mode.launch
          move_arm_to:=switch"
        name="switch_to_continuous_effort_control" output="screen">
      </node>
    </group>

<group if="$(arg start_rviz)">
   <node pkg="rviz" type="rviz" name="rviz" args="-d $(find kuka_kr5_gazebo)/config/rviz_gz.rviz" />
</group>

</launch>


